# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: manual-publish

on:
  workflow_dispatch:
    inputs:
      semver:
        description: 'Leave empty or input major|minor|patch'
        required: false
        default: ''

jobs:
  build:
    runs-on: ${{ matrix.os }}
    container: node:14.17-buster
    if: "!contains(github.event.head_commit.message, '[skip ci]')"

    strategy:
      matrix:
        node: [14]
        os: [ubuntu-latest]

    steps:
      - name: Prepare
        run: |
          uname -a
          sudo apt-get update -qq --yes > /dev/null
          sudo apt-get upgrade -qq --yes > /dev/null
          sudo apt-get install -qq --yes --no-install-recommends bash git postgresql-client jq
          npm -v && node -v
          git --version
          uname -a
      - uses: actions/checkout@v2
        with:
          # pulls all commits (needed for lerna / semantic release to correctly version)
          fetch-depth: "0"
      - name: Fix for semantic release
        # pulls all tags (needed for lerna / semantic release to correctly version)
        run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*
      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}
          registry-url: 'https://registry.npmjs.org'
      - name: Verify
        run: |
          echo $GITHUB_REF
          # github project/settings/Secrets/New repository secret: NPM_TOKEN
          npm whoami
          #psql -V
          #dig postgres
          #echo "\l" | psql -h $POSTGRES_HOST -p $POSTGRES_PORT -U$POSTGRES_USER -d postgres
          #psql -h $POSTGRES_HOST -p $POSTGRES_PORT -U$POSTGRES_USER -d $POSTGRES_DB -1 -bq -f ./packages/demo-service/src/database/init.sql
          #psql -h $POSTGRES_HOST -p $POSTGRES_PORT -U$POSTGRES_USER -d $POSTGRES_DB -c "\d+"
          #psql -h $POSTGRES_HOST -p $POSTGRES_PORT -U$POSTGRES_USER -d $POSTGRES_DB -c "SELECT * FROM tb_user"
          dig httpbin
          curl http://httpbin/get
        env:
          CI: true
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          #POSTGRES_HOST: postgres
          #POSTGRES_PORT: ${{ job.services.postgres.ports[5432] }}
          #POSTGRES_DB: db_ci_test
          #POSTGRES_USER: postgres
          #POSTGRES_PASSWORD: postgres
          #PGPASSWORD: postgres

      - name: npm build
        run: |
          openssl version
          node -v
          npm i -g lerna nyc rollup
          npm run bootstrap
          npm run build --if-present
        env:
          CI: true
      - name: npm ci
        run: |
          # lint must after build
          npm run lint:nofix
          npm run ci
        env:
          CI: true
          HTTPBIN_HOST: httpbin

      - name: npm publish
        run: |
          git config user.name $GITHUB_ACTOR
          git config user.email gh-actions-${GITHUB_ACTOR}@github.com
          # npm run pub major
          bash .scripts/publish.sh --yes --conventional-commits --create-release github ${{ github.event.inputs.semver }}
          git push -v origin --follow-tags
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1

    services:
      httpbin:
        image: kennethreitz/httpbin
        ports:
          - 80:80 # no 443

