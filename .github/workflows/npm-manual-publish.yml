# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: manual-publish

on:
  workflow_dispatch:
    inputs:
      semver:
        description: 'Leave empty or input major|minor|patch'
        required: false
        default: ''

jobs:
  build:
    runs-on: ${{ matrix.os }}
    container: node:16-bullseye
    if: "!contains(github.event.head_commit.message, '[skip ci]')"

    strategy:
      matrix:
        node: [16]
        os: [ubuntu-latest]

    steps:
      - name: Prepare
        run: |
          uname -a
          export DEBIAN_FRONTEND=noninteractive
          apt-get update -qq --yes > /dev/null
          apt-get upgrade -qq --yes > /dev/null
          apt-get install -qq --yes --no-install-recommends bash dnsutils git jq net-tools postgresql-client wget > /dev/null
          uname -a
          npm -v && node -v
          git --version
          openssl version
          cat /etc/*release
      - uses: actions/checkout@v2
        with:
          # pulls all commits (needed for lerna / semantic release to correctly version)
          fetch-depth: "0"
      - name: Fix for semantic release
        # pulls all tags (needed for lerna / semantic release to correctly version)
        run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*
      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}
          registry-url: 'https://registry.npmjs.org'

      - name: Verify
        run: |
          echo $GITHUB_REF
          # github project/settings/Secrets/New repository secret: NPM_TOKEN
          dig httpbin
          curl http://httpbin/get
          npm whoami
        env:
          CI: true
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Build
        run: |
          whoami
          export cwd=`pwd`
          sh .scripts/ci/ci-prepare.sh
          sh .github/workflows/fix.sh
          npm i -g c8 lerna rollup
          sh .github/workflows/fix.sh
          npm run bootstrap
          sh .github/workflows/fix.sh
          npm run build --if-present
        env:
          CI: true

      # - name: Init Database
      #   run: |
      #     export cwd=`pwd`
      #     .scripts/ci/ci-init-db.sh
      #   env:
      #     CI: true
      #     POSTGRES_HOST: postgres
      #     POSTGRES_PORT: ${{ job.services.postgres.ports[5432] }}
      #     POSTGRES_DB: db_ci_test
      #     POSTGRES_USER: postgres
      #     POSTGRES_PASSWORD: postgres
      #     PGPASSWORD: postgres

      - name: Lint
        run: |
          npm run lint:nofix
        env:
          CI: true

      - name: Testing
        run: |
          npm run ci
        env:
          CI: true
          HTTPBIN_HOST: httpbin

      - name: npm publish
        run: |
          git restore .
          git config user.name $GITHUB_ACTOR
          git config user.email gh-actions-${GITHUB_ACTOR}@github.com
          # npm run pub major
          bash .scripts/publish.sh --yes --conventional-commits --create-release github ${{ github.event.inputs.semver }}
          git push -v origin --follow-tags
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1

    services:
      httpbin:
        image: kennethreitz/httpbin
        ports:
          - 80:80 # no 443

